{"ast":null,"code":"var _jsxFileName = \"/Users/vanessas/kumbuka/src/components/ParticleCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Particle {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.x = Math.random() * canvas.width;\n    this.y = Math.random() * canvas.height;\n    this.size = Math.random() * 3 + 1; // Size between 1 and 4\n    this.speedX = Math.random() * 0.5 - 0.25; // Speed between -0.25 and 0.25\n    this.speedY = Math.random() * 0.5 - 0.25;\n    this.color = `rgba(252, 209, 22, ${Math.random() * 0.5 + 0.5})`; // Yellow with varying opacity\n  }\n  update() {\n    this.x += this.speedX;\n    this.y += this.speedY;\n    if (this.x < 0 || this.x > this.canvas.width) this.speedX *= -1;\n    if (this.y < 0 || this.y > this.canvas.height) this.speedY *= -1;\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    ctx.fill();\n  }\n}\nfunction ParticleCanvas() {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    let particles = [];\n    const createParticles = () => {\n      particles = [];\n      const particleCount = 150; // Adjust this number to increase/decrease particles\n      for (let i = 0; i < particleCount; i++) {\n        particles.push(new Particle(canvas));\n      }\n    };\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      createParticles();\n    };\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw(ctx);\n      });\n      animationFrameId = requestAnimationFrame(animate);\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    animate();\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    id: \"particle-canvas\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 10\n  }, this);\n}\n_s(ParticleCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ParticleCanvas;\nexport default ParticleCanvas;\nvar _c;\n$RefreshReg$(_c, \"ParticleCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Particle","constructor","canvas","x","Math","random","width","y","height","size","speedX","speedY","color","update","draw","ctx","fillStyle","beginPath","arc","PI","fill","ParticleCanvas","_s","canvasRef","current","getContext","animationFrameId","particles","createParticles","particleCount","i","push","resizeCanvas","window","innerWidth","innerHeight","animate","clearRect","forEach","particle","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vanessas/kumbuka/src/components/ParticleCanvas.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nclass Particle {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.x = Math.random() * canvas.width;\n    this.y = Math.random() * canvas.height;\n    this.size = Math.random() * 3 + 1; // Size between 1 and 4\n    this.speedX = Math.random() * 0.5 - 0.25; // Speed between -0.25 and 0.25\n    this.speedY = Math.random() * 0.5 - 0.25;\n    this.color = `rgba(252, 209, 22, ${Math.random() * 0.5 + 0.5})`; // Yellow with varying opacity\n  }\n\n  update() {\n    this.x += this.speedX;\n    this.y += this.speedY;\n\n    if (this.x < 0 || this.x > this.canvas.width) this.speedX *= -1;\n    if (this.y < 0 || this.y > this.canvas.height) this.speedY *= -1;\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    ctx.fill();\n  }\n}\n\nfunction ParticleCanvas() {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    let particles = [];\n\n    const createParticles = () => {\n      particles = [];\n      const particleCount = 150; // Adjust this number to increase/decrease particles\n      for (let i = 0; i < particleCount; i++) {\n        particles.push(new Particle(canvas));\n      }\n    };\n\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      createParticles();\n    };\n\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw(ctx);\n      });\n      animationFrameId = requestAnimationFrame(animate);\n    };\n\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    animate();\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n\n  return <canvas ref={canvasRef} id=\"particle-canvas\" />;\n}\n\nexport default ParticleCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}